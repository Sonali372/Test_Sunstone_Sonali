package T1;


abstract class Flight {
 protected String flightNumber;
 protected String origin;
 protected String destination;
 protected double baseFare;

 public Flight(String flightNumber, String origin, String destination, double baseFare) {
     this.flightNumber = flightNumber;
     this.origin = origin;
     this.destination = destination;
     this.baseFare = baseFare;
 }

 // Abstract method
 public abstract double calculateFare();

 // Display method (can be overridden)
 public void displayDetails() {
     System.out.println("Flight Number: " + flightNumber);
     System.out.println("From: " + origin + " To: " + destination);
     System.out.println("Base Fare: ₹" + baseFare);
 }
}

//DomesticFlight class
class DomesticFlight extends Flight {
 private static final double domesticTaxRate = 0.10;

 public DomesticFlight(String flightNumber, String origin, String destination, double baseFare) {
     super(flightNumber, origin, destination, baseFare);
 }

 @Override
 public double calculateFare() {
     return baseFare + (baseFare * domesticTaxRate);
 }

 @Override
 public void displayDetails() {
     super.displayDetails();
     System.out.println("Domestic Tax: 10%");
     System.out.println("Total Fare: " + calculateFare());
     System.out.println("----------------------------");
 }
}

//InternationalFlight class
class InternationalFlight extends Flight {
 private static final double internationalTaxRate = 0.20;
 private double immigrationFee;

 public InternationalFlight(String flightNumber, String origin, String destination, double baseFare, double immigrationFee) {
     super(flightNumber, origin, destination, baseFare);
     this.immigrationFee = immigrationFee;
 }

 @Override
 public double calculateFare() {
     return baseFare + (baseFare * internationalTaxRate) + immigrationFee;
 }

 @Override
 public void displayDetails() {
     super.displayDetails();
     System.out.println("International Tax: 20%");
     System.out.println("Immigration Fee: ₹" + immigrationFee);
     System.out.println("Total Fare: " + calculateFare());
     System.out.println("----------------------------");
 }
}

//Main class using polymorphism
public class T3 {
 public static void main(String[] args) {
     // Create polymorphic array of Flight
     Flight[] flights = new Flight[4];

     // Add domestic and international flights
     flights[0] = new DomesticFlight("D101", "Delhi", "Mumbai", 5000);
     flights[1] = new InternationalFlight("I201", "Delhi", "Dubai", 15000, 3000);
     flights[2] = new DomesticFlight("D102", "Bangalore", "Chennai", 3000);
     flights[3] = new InternationalFlight("I202", "Mumbai", "London", 25000, 5000);

     // Display details dynamically using polymorphism
     for (Flight flight : flights) {
         flight.displayDetails(); // dynamic method dispatch
     }
 }
}



